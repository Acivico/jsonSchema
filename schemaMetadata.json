{
	"$id": "http://openvre.bsc.es/metadata/schema",
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "VRE-DEV Schema file data",
	"description": "",
	"type": "object",
	"properties": {
	  "_id": {
		"type": "string",
		"title": "VRE identifier",
		"description": "A string uniquely identifying the VRE ",
		"pattern": "^[a-z,A-Z]{1,5}(USER|ANON)[a-z,0-9]{1,}_[a-z,0-9]{1,}[.][0-9]{1,}$",
		"readOnly": true
	  },
	  "self_uri": {
		"type": "string",
		"title": "Self URI",
		"description": "____TODO____",
		"format": "uri",
		"readOnly": true
	  },
	  "size": {
		"type": "integer",
		"title": "Size",
		"description": "For blobs, the blob size in bytes. For bundles, the cumulative size, in bytes, of directory",
		"readOnly": true
	  },
	  "atime": {
		"type": "string",
		"title": "Creation time",
		"description": "Timestamp of content creation",
		"format": "date-time",
		"readOnly": true
	  },
	  "mtime": {
		"type": "string",
		"title": "Modification time",
		"description": "Timestamp of content update",
		"format": "date-time",
		"readOnly": true
	  },
	  "expiration": {
		"title": "Expiration",
		"description": "Timestamp of content expiration before authomatic deletion",
		"anyOf": [
		  {
			"type": "number",
			"minimum": -1,
			"maximum": -1
		  },
		  {
			"type": "string",
			"format": "date-time"
		  }
		],
		"readOnly": true
	  },
	  "lastAccess": {
		"type": "string",
		"title": "Last Access",
		"description": "Timestamp of last content access",
		"format": "date-time",
		"readOnly": true
	  },
	  "checksums": {
		"type": "array",
		"title": "Checksums",
		"description": "The hex-string encoded checksum for the data",
		"minItems": 1,
		"items": {
		  "type": "object",
		  "properties": {
			"checksum": {
			  "type": "string"
			},
			"type": {
			  "type": "string",
			  "enum": [
				"sha-256",
				"sha-256-128",
				"sha-256-120",
				"sha-256-96",
				"sha-256-64",
				"sha-256-32",
				"sha-384",
				"sha-512",
				"sha3-224",
				"sha3-256",
				"sha3-384",
				"sha3-512"
			  ]
			}
		  }
		},
		"readOnly": true
	  },
	  "path": {
		"type": "string",
		"title": "Local Path",
		"description": "Resource path relative to the App datastore",
		"format": "uri-reference",
		"readOnly": true
	  },
	  "url": {
		"type": "string",
		"title": "Remote Path (URL)",
		"description": "Resource access URL",
		"format": "uri",
		"readonly": true
	  },
	  "type": {
		"type": "string",
		"title": "Type",
		"description": "Type of VRE data object",
		"enum": [
		  "file",
		  "dir"
		],
		"default": "file",
		"const": "file",
		"readOnly": true
	  },
	  "files": {
		"type": "array",
		"title": "Directory contents",
		"description": "File Identifiers bundled in the directory. Required only if type=dir.",
		"items": {
		  "type": "string",
		  "pattern": "^[a-z,A-Z]{1,5}(USER|ANON)[a-z,0-9]{1,}_[a-z,0-9]{1,}[.][0-9]{1,}$"
		},
		"uniqueItems": true,
		"readOnly": true,
		"default": []
	  },
	  "parentDir": {
		"type": "string",
		"title": "Parent Directory",
		"description": "Parent directory of file",
		"pattern": "^[a-z,A-Z]{1,5}(USER|ANON)[a-z,0-9]{1,}_[a-z,0-9]{1,}[.][0-9]{1,}$",
		"readOnly": true
	  },
	  "project": {
		"type": "string",
		"title": "Project Name",
		"description": "_____TODO_____",
		"pattern": "^PROJ",
		"readOnly": true
	  },
	  "owner": {
		"type": "string",
		"title": "Data Owner",
		"description": "The owner of the file/directory",
		"pattern": "^(USER|ANON)[0-9]+$",
		"readOnly": true
	  },
		
		
		
		
	  "description": {
		"type": "string",
		"title": "Description",
		"description": "A human readable description of the file"
	  },
	  "name": {
		"type": "string",
		"title": "Name",
		"description": "A string that can be used to name. Automatically set up as the file basename."
	  },
	  "data_type": {
		"type": "string",
		"title": "Data type",
		"description": "Type of data contained in the data resource",
		"enum": [
			"bioimage",
			"configuration_file",
			"data_atac_seq",
			"data_chic",
			"data_rna_seq",
			"deep_learning_model",
			"dna_sequence",
			"image_mask",
			"machine_learning_features",
			"parameter_file",
			"report",
			"sequence_annotation",
			"sequence_rna",
			"tool_statistics",
			"extended_MAP_file",
			"sample_information_file",
			"allele_frequency_report",
			"component_file",
			"samples_ambiguous_codes",
			"genome_annotation",
			"expression_matrix",
			"differential_matrix",
			"annotations",
			"covariate_matrix",
			"group_definitions",
			"study_data",
			"study_meta_data"
		],
		"options": {
		  "enum_titles": [
			"Bio Image",
			"Configuration file",
			"Data Atac Sequence",
			"Data chic",
			"Data RNA Sequence",
			"Deep learning model",
			"DNA sequence",
			"Image mask",
			"Machine learning features",
			"Parameter file",
			"Report",
			"Sequence annotation",
			"Sequence rna",
			"Tool statistics",
			"Extended MAP file",
			"Sample information file",
			"Allele frequency report",
			"Component file",
			"Samples ambiguous codes",
			"Genome annotation",
			"Expression matrix",
			"Differential matrix",
			"Annotations",
			"Covariate matrix",
			"Group definitions",
			"Study data",
			"Study meta data"
		  ]
		},
		"default":"bioimage"
	  },
	  "format": {
		"type": "string",
		"title": "File Format",
		"description": "File Format",
		"enum": [
		  "null",
		  "AMB",
		  "ANN",
		  "BAI",
		  "BAM",
		  "BB",
		  "BED",
		  "BEDGRAPH",
		  "BT2",
		  "BW",
		  "BWT",
		  "CPT",
		  "CSV",
		  "DICOM",
		  "DCD",
		  "FASTA",
		  "FASTQ",
		  "GEM",
		  "GFF",
		  "GFF3",
		  "GTF",
		  "GZ",
		  "HDF5",
		  "IDX",
		  "JSON",
		  "LOG",
		  "LIF",
		  "MDCRD",
		  "NIFTI",
		  "NETCDF",
		  "PAC",
		  "PARMTOP",
		  "PDB",
		  "PDF",
		  "PICKLE",
		  "PNG",
		  "RDATA",
		  "RST",
		  "RAW",
		  "SA",
		  "TAR",
		  "TBI",
		  "TIFF",
		  "TOP",
		  "TPR",
		  "TSV",
		  "TXT",
		  "VCF",
		  "WIG",
		  "BIM",
		  "FAM",
		  "NOSEX",
		  "XLSX",
		  "XTC",
		  "HTML"
		]
	  },
	  "mime_type": {
		"type": "string",
		"title": "Mime type",
		"description": "____TODO____"
	  },
	  "source_url": {
		"type": "string",
		"title": "Source URL",
		"description": "Reference to the source URL",
		"format": "uri"
	  },
	  "version": {
		"type": "string",
		"title": "Version",
		"description": "A string representing a version",
		"default": "1.0"
	  },
	  "visible": {
		"type": "boolean",
		"title": "Visible",
		"description": "Display the data resource at the VRE workspace",
		"default": true
	  },
	  "compressed": {
		"title": "Compression",
		"description": "Type of compression used",
		"anyOf": [
		  {
			"type": "boolean"
		  },
		  {
			"type": "string",
			"enum": [
			  "gzip",
			  "zip",
			  "gz",
			  "tar",
			  "rar"
			]
		  }
		],
		"default": false
	  },
	  "validated": {
		"type": "boolean",
		"title": "Valid Metadata",
		"description": "Indicates if the full set of metadata is valid",
		"default": false,
		"readonly": true
	  },
	  "tool": {
		"type": "string",
		"title": "Tool (provenance data)",
		"description": "Provenance metadata. VRE Tool or Process that generated the present data resource.",
		"readonly": true
	  },
	  "arguments": {
		"type": "object",
		"title": "Arguments (provenance data)",
		"description": "Provenance metadata. Key-value pairs of the arguments set during the VRE process that produced the present data resource. Only applicable if the resource is the result of a VRE process.",
		"additionalProperties": {
		  "type": [
			"string",
			"number",
			"array"
		  ]
		},
		"readonly": true
	  },
	  "input_files": {
		"type": "array",
		"title": "Input files (provenance data)",
		"description": "Provencance Metadata. List of File identidiers feed into the VRE process that generated the present data resource. Only applicable if the resource is the result of a VRE process.",
		"items": {
		  "type": "string",
		  "pattern": "^[a-z,A-Z]{1,5}(USER|ANON)[a-z,0-9]{1,}_[a-z,0-9]{1,}[.][0-9]{1,}$"
		},
		"readonly": true
	  },
	  "log_file": {
		"type": "string",
		"title": "Log File Path (provenance data)",
		"description": "Absolute path of the log file generated associated to the VRE process that generated the present data resouce. Only applicable if the resource is the result of a VRE process.",
		"readonly": true
	  },
	  "submission_file": {
		"type": "string",
		"title": "Submission File Path (provenance data)",
		"description": "Absolute path of the submission file generated associated to the VRE process that generated the present data resouce. Only applicable if the resource is the result of a VRE process.",
		"readonly": true
	  },
	  "is_a": {
		"type": "string",
		"title": "Is a",
		"description": "Extra specification on the data resource nature",
		"enum": [
		  "project"
		],
		"readonly": true
	  },
	  "project_type": {
		"type": "string",
		"title": "Project Type",
		"description": "Type of VRE project or workspace. Only applicable if the data resource is_a=project. ",
		"enum": [
		  "private"
		],
		"readonly": true,
		"default": "private"
	  },
	  "community_specific": {
		"title": "Community Specific",
		"description": "____TODO____",
		"type": "object"
	  },
	  "protected": {
		"title": "Protected Properties",
		"description": "____TODO____",
		"type": "object"
	  }
	},
	"allOf": [
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "bioimage"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
              "NIFTI", "DICOM"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "configuration_file"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
              "JSON", "TXT", "TSV"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "data_atac_seq"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
              "FASTQ", "BAM", "BED", "WIG"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "data_chic"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
              "BED", "FASTQ", "BAM", "TXT", "TAR"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "data_rna_seq"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
		        "FASTQ", "TSV", "HDF5", "BAM", "BED", "BW", "GFF", "GFF3"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "dna_sequence"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "FASTA"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "image_mask"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "NIFTI"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "machine_learning_features"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
		        "CSV"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "parameter_file"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "TXT", "CSV"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "report"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "PDF", "LOG", "HTML"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "sequence_annotation"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "BED", "BB", "BEDGRAPH", "WIG", "BW", "GFF", "GFF3", "GTF", "VCF", "TBI"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "sequence_rna"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "FASTA"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "tool_statistics"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "TAR"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "extended_MAP_file"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
		        "BIM"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "sample_information_file"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "FAM", "CSV"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "allele_frequency_report"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "FAM"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "component_file"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
		        "RAW"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "samples_ambiguous_codes"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "NOSEX"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "genome_annotation"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "BED"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "expression_matrix"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
		        "XLSX"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "differential_matrix"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "XLSX"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "annotations"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "XLSX"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "covariate_matrix"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "XLSX"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "group_definitions"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "XLSX"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "study_data"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "XLSX", "TSV", "CSV"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "data_type": {
            "const": "study_meta_data"
          }
        }
      },
      "then": {
        "properties": {
          "format": {
            "enum": [
                "XLSX", "TSV", "CSV"
            ]
          }
        }
      }
    }
  ]
  }
